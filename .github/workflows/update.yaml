name: Update

on:
  schedule:
    - cron: "42 4 * * 6"
  workflow_dispatch:

jobs:
  update:
    name: Update
    runs-on: ubuntu-22.04
    steps:
      - name: Get the latest Ruffle tag
        id: tag
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Use the one before last version of Ruffle, not the last one.
          # This adds some stability despite not having stable releases.
          tag=$(gh --repo ruffle-rs/ruffle release list --limit 2 | tail -n 1 | cut -f 3)
          if [[ -z "$tag" ]]; then
            exit 1
          fi
          echo "tag=$tag" | tee -a $GITHUB_OUTPUT

      - name: Check out Ruffle repo
        uses: actions/checkout@v4
        with:
          repository: ruffle-rs/ruffle
          ref: ${{ steps.tag.outputs.tag }}
          path: ruffle

      - name: Get Ruffle commit
        id: commit
        working-directory: ruffle
        run: |
          commit=$(git rev-parse HEAD)
          echo "commit=$commit" | tee -a $GITHUB_OUTPUT

      - name: Get Ruffle version
        id: version
        working-directory: ruffle
        run: |
          version=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[] | select(.name=="ruffle_desktop") | .version')
          echo "version=$version" | tee -a $GITHUB_OUTPUT

      - name: Check out Flathub repo
        uses: actions/checkout@v4
        with:
          path: flathub

      - name: Update manifest
        working-directory: flathub
        run: |
          if [[ "$(yq '.modules[0].name' rs.ruffle.Ruffle.yaml)" != "ruffle" ]]; then
            exit 1
          fi
          yqblank() {
            yq "$1" "$2" | diff -B "$2" - | patch "$2" -
          }
          yqblank '.modules[0].sources[0].tag = "${{ steps.tag.outputs.tag }}"' rs.ruffle.Ruffle.yaml
          yqblank '.modules[0].sources[0].commit = "${{ steps.commit.outputs.commit }}"' rs.ruffle.Ruffle.yaml

      - name: Update cargo sources
        working-directory: flathub
        run: |
          make regenerate-sources RUFFLE_COMMIT=${{ steps.commit.outputs.commit }}

      - name: Show diff
        working-directory: flathub
        run: |
          git diff

      - name: Configure git
        working-directory: flathub
        run: |
          git config user.name "RuffleBuild"
          git config user.email "ruffle@ruffle.rs"

      - name: Commit and push
        working-directory: flathub
        run: |
          git checkout -b update
          git add .
          git commit -m "Update to ${{ steps.version.outputs.version }}"
          git push -u origin update

      - name: Create a PR
        working-directory: flathub
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr create \
            -B master -H update \
            --title 'Update to ${{ steps.version.outputs.version }}' \
            --body 'Automatic update of Ruffle to [${{ steps.version.outputs.version }}](https://github.com/ruffle-rs/ruffle/releases/tag/${{ steps.tag.outputs.tag }}).'
